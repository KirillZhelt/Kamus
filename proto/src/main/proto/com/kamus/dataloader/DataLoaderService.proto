syntax = "proto3";

import "com/kamus/common/GitEntities.proto";

package com.kamus.dataloader.grpcjava;

option java_multiple_files = true;
option java_package = "com.kamus.dataloader.grpcjava";

message GetCurrentDistributionHashRequest {

}

message GetCurrentDistributionHashResponse {
  int32 hash = 1;
}

message LoaderConfiguration {
  repeated com.kamus.common.grpcjava.Repository repository = 1;
  int32 bucket = 2;
}

message SetSourcesRequest {
  repeated LoaderConfiguration configurationBucket = 1;
}

message SetSourcesResponse {

}

message AddRepositoryRequest {
  com.kamus.common.grpcjava.Repository repository = 1;
  int32 bucket = 2;
}

message AddRepositoryResponse {

}

message RemoveRepositoryRequest {
  com.kamus.common.grpcjava.Repository repository = 1;
  int32 bucket = 2;
}

message RemoveRepositoryResponse {

}

message AddRepositoriesRequest {
  repeated com.kamus.common.grpcjava.Repository repository = 1;
  int32 bucket = 2;
}

message AddRepositoriesResponse {

}

message RemoveRepositoriesRequest {
  repeated com.kamus.common.grpcjava.Repository repository = 1;
  int32 bucket = 2;
}

message RemoveRepositoriesResponse {

}

service DataLoaderService {
  rpc getCurrentDistributionHash(GetCurrentDistributionHashRequest) returns (GetCurrentDistributionHashResponse);

  rpc setSources(SetSourcesRequest) returns (SetSourcesResponse);

  rpc addRepository(AddRepositoryRequest) returns (AddRepositoryResponse);
  rpc removeRepository(AddRepositoryRequest) returns (AddRepositoryResponse);

  rpc addRepositories(AddRepositoriesRequest) returns (AddRepositoriesResponse);
  rpc removeRepositories(RemoveRepositoriesRequest) returns (RemoveRepositoriesResponse);
}